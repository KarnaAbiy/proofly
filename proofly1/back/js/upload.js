// –ü–æ–ª–Ω—ã–π —É–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
const fileInput = document.getElementById("mediaUpload");
const browseButton = document.getElementById("browseButton");
const fileList = document.getElementById("fileList");
const dragDropBox = document.getElementById("dragDropBox");
const complaintForm = document.getElementById("complaintForm");

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è)
const BOT_TOKEN = "7219817475:AAG8BBGKjMREmWX6R1v5kl94AYE1yP9vQ0M";
const CHAT_ID = "1002343266";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(message, isSuccess = false) {
  const alertBox = document.createElement("div");
  alertBox.style.position = "fixed";
  alertBox.style.top = "20px";
  alertBox.style.right = "20px";
  alertBox.style.padding = "15px";
  alertBox.style.background = isSuccess ? "#4CAF50" : "#F44336";
  alertBox.style.color = "white";
  alertBox.style.borderRadius = "5px";
  alertBox.style.zIndex = "1000";
  alertBox.style.boxShadow = "0 2px 10px rgba(0,0,0,0.2)";
  alertBox.textContent = message;
  
  document.body.appendChild(alertBox);
  
  setTimeout(() => {
    alertBox.style.opacity = "0";
    setTimeout(() => alertBox.remove(), 500);
  }, 3000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ (–≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥)
function updateFileList(files) {
  fileList.innerHTML = "";
  Array.from(files).forEach((file, index) => {
    const listItem = document.createElement("li");
    listItem.className = "file-item";
    const fileTypeIcon = file.type.startsWith("image") ? "üñºÔ∏è" : file.type.startsWith("video") ? "üé•" : "üìÑ";
    listItem.innerHTML = `
      <span>${fileTypeIcon} ${file.name}</span>
      <button class="remove-button">‚ùå</button>
    `;
    listItem.querySelector(".remove-button").onclick = () => {
      const newFiles = Array.from(fileInput.files).filter((_, i) => i !== index);
      const dataTransfer = new DataTransfer();
      newFiles.forEach(f => dataTransfer.items.add(f));
      fileInput.files = dataTransfer.files;
      updateFileList(dataTransfer.files);
    };
    fileList.appendChild(listItem);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–∞–π–ª–æ–≤
browseButton.addEventListener("click", () => fileInput.click());
fileInput.addEventListener("change", (e) => updateFileList(e.target.files));
dragDropBox.addEventListener("dragover", (e) => {
  e.preventDefault();
  dragDropBox.classList.add("drag-over");
});
dragDropBox.addEventListener("dragleave", () => dragDropBox.classList.remove("drag-over"));
dragDropBox.addEventListener("drop", (e) => {
  e.preventDefault();
  dragDropBox.classList.remove("drag-over");
  if (e.dataTransfer.files.length) {
    fileInput.files = e.dataTransfer.files;
    updateFileList(e.dataTransfer.files);
  }
});

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
complaintForm.addEventListener("submit", async (e) => {
  e.preventDefault();
  
  const description = document.getElementById("description").value.trim();
  const location = document.getElementById("location").value.trim();
  const files = fileInput.files;
  
  if (!description) {
    showAlert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é!");
    return;
  }

  try {
    // 1. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
    const textResponse = await fetch(
      `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: `üì¢ –ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞!\n\n‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: ${description}\nüìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${location || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\nüìé –§–∞–π–ª–æ–≤: ${files.length}`,
          parse_mode: "HTML"
        })
      }
    );

    if (!textResponse.ok) {
      const error = await textResponse.json();
      throw new Error(error.description || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ–∫—Å—Ç–∞");
    }

    // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (files.length > 0) {
      for (const file of files) {
        const formData = new FormData();
        formData.append("chat_id", CHAT_ID);
        formData.append("document", file);
        
        const fileResponse = await fetch(
          `https://api.telegram.org/bot${BOT_TOKEN}/sendDocument`,
          { method: "POST", body: formData }
        );
        
        if (!fileResponse.ok) {
          const error = await fileResponse.json();
          console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ ${file.name}:`, error.description);
        }
      }
    }

    // –£—Å–ø–µ—Ö
    showAlert("–ñ–∞–ª–æ–±–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", true);
    complaintForm.reset();
    fileList.innerHTML = "";

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
    showAlert(`–û—à–∏–±–∫–∞: ${error.message}`);
  }
});

